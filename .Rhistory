est <- SARMA(Y = y, p = p, q = q, P = P, Q = Q, P_lag = ar_lags, Q_lag = ma_lags)
ar_effect <- NULL #need to add holidays and such
ma_effect <- NULL
ar_it <- 1
ma_it <- 1
order <- c(1,0)
order_new <- c(1,0)
years <- c("year", "two_year", "three_year")
est <- seasonal_arma(y, dates, order = order, seasonal_ar = ar_effect, seasonal_ma = ma_effect)
ucv <- var(y, na.rm = T)
pen <- .2
SIC0 <- (ucv-est$MSE)/ucv - pen*(sum(order) + length(ar_effect) + length(ma_effect))/sqrt(length(y)) #Seth's bogus information criteria
for(it in 1:4){
ar_effect_new <- c(ar_effect, years[ar_it])
est  <- seasonal_arma(y, dates, order = order, seasonal_ar = ar_effect_new, seasonal_ma = ma_effect)
SIC1 <- (ucv-est$MSE)/ucv - pen*(sum(order) + length(ar_effect) + length(ma_effect))/sqrt(length(y))  #Seth's bogus information criteria
ma_effect_new <- c(ma_effect, years[ma_it])
est  <- seasonal_arma(y, dates, order = order, seasonal_ar = ar_effect, seasonal_ma = ma_effect_new)
SIC2 <- (ucv-est$MSE)/ucv - pen*(sum(order) + length(ar_effect) + length(ma_effect_new))/sqrt(length(y))  #Seth's bogus information criteria
order_ar <- order + c(1,0)
est <- seasonal_arma(y, dates, order = order_ar, seasonal_ar = ar_effect, seasonal_ma = ma_effect)
SIC3 <- (ucv-est$MSE)/ucv - pen*(sum(order) + length(ar_effect) + length(ma_effect))/sqrt(length(y))  #Seth's bogus information criteria
if(length(ma_effect)==0){ #q>0 requires a seasonal MA component
order_ma <- order + c(0,1)
ma_effect_new <- c(ma_effect, years[1])
est <- seasonal_arma(y, dates, order = order_ma, seasonal_ar = ar_effect, seasonal_ma = ma_effect_new)
SIC4 <- (ucv-est$MSE)/ucv - pen*(sum(order) + length(ar_effect) + length(ma_effect))/sqrt(length(y))  #Seth's bogus information criteria
if( all(SIC0 > c(SIC1, SIC2, SIC3, SIC4)) ){
break
}else if( all(SIC1 > c(SIC0, SIC2, SIC3, SIC4)) ){
ar_effect <- ar_effect_new
ar_it <- ar_it + 1
SIC0 <- SIC1
}else if( all(SIC2 > c(SIC1, SIC0, SIC3, SIC4)) ){
ma_effect <- ma_effect_new
ma_it <- ma_it + 1
SIC0 <- SIC2
}else if( all(SIC3 > c(SIC1, SIC2, SIC0, SIC4)) ){
order <- order_ar
SIC0 <- SIC3
}
else if( all(SIC4 > c(SIC0, SIC1, SIC2, SIC3)) ){
order <- order_ma
ma_effect <- ma_effect_new
ma_it <- 2
SIC0 <- SIC4
}
}else{ #if length(ma_effect>0)
order_ma <- order + c(0,1)
est <- seasonal_arma(y, dates, order = order_ma, seasonal_ar = ar_effect, seasonal_ma = ma_effect)
SIC4 <- (ucv-est$MSE)/ucv - pen*(sum(order) + length(ar_effect) + length(ma_effect))/sqrt(length(y))  #Seth's bogus information criteria
if( all(SIC0 > c(SIC1, SIC2, SIC3, SIC4)) ){
break
}else if( all(SIC1 > c(SIC0, SIC2, SIC3, SIC4)) ){
ar_effect <- ar_effect_new
ar_it <- ar_it + 1
SIC0 <- SIC1
}else if( all(SIC2 > c(SIC1, SIC0, SIC3, SIC4)) ){
ma_effect <- ma_effect_new
ma_it <- ma_it + 1
SIC0 <- SIC2
}else if( all(SIC3 > c(SIC1, SIC2, SIC0, SIC4)) ){
order <- order_ar
SIC0 <- SIC3
}
else if( all(SIC4 > c(SIC0, SIC1, SIC2, SIC3)) ){
order <- order_ma
SIC0 <- SIC4
}
}#if length(ma_effect>0)
} #for(it in 1:4)
it
est  <- seasonal_arma(y, dates, order = order, seasonal_ar = ar_effect_new, seasonal_ma = ma_effect)
ar_effect_new
ma_effect
order
Rcpp::sourceCpp('src/SA.cpp')
est  <- seasonal_arma(y, dates, order = order, seasonal_ar = ar_effect_new, seasonal_ma = ma_effect)
ar_effect <- NULL #need to add holidays and such
ma_effect <- NULL
ar_it <- 1
ma_it <- 1
order <- c(1,0)
order_new <- c(1,0)
years <- c("year", "two_year", "three_year")
est <- seasonal_arma(y, dates, order = order, seasonal_ar = ar_effect, seasonal_ma = ma_effect)
ucv <- var(y, na.rm = T)
pen <- .2
SIC0 <- (ucv-est$MSE)/ucv - pen*(sum(order) + length(ar_effect) + length(ma_effect))/sqrt(length(y)) #Seth's bogus information criteria
for(it in 1:4){
ar_effect_new <- c(ar_effect, years[ar_it])
est  <- seasonal_arma(y, dates, order = order, seasonal_ar = ar_effect_new, seasonal_ma = ma_effect)
SIC1 <- (ucv-est$MSE)/ucv - pen*(sum(order) + length(ar_effect) + length(ma_effect))/sqrt(length(y))  #Seth's bogus information criteria
ma_effect_new <- c(ma_effect, years[ma_it])
est  <- seasonal_arma(y, dates, order = order, seasonal_ar = ar_effect, seasonal_ma = ma_effect_new)
SIC2 <- (ucv-est$MSE)/ucv - pen*(sum(order) + length(ar_effect) + length(ma_effect_new))/sqrt(length(y))  #Seth's bogus information criteria
order_ar <- order + c(1,0)
est <- seasonal_arma(y, dates, order = order_ar, seasonal_ar = ar_effect, seasonal_ma = ma_effect)
SIC3 <- (ucv-est$MSE)/ucv - pen*(sum(order) + length(ar_effect) + length(ma_effect))/sqrt(length(y))  #Seth's bogus information criteria
if(length(ma_effect)==0){ #q>0 requires a seasonal MA component
order_ma <- order + c(0,1)
ma_effect_new <- c(ma_effect, years[1])
est <- seasonal_arma(y, dates, order = order_ma, seasonal_ar = ar_effect, seasonal_ma = ma_effect_new)
SIC4 <- (ucv-est$MSE)/ucv - pen*(sum(order) + length(ar_effect) + length(ma_effect))/sqrt(length(y))  #Seth's bogus information criteria
if( all(SIC0 > c(SIC1, SIC2, SIC3, SIC4)) ){
break
}else if( all(SIC1 > c(SIC0, SIC2, SIC3, SIC4)) ){
ar_effect <- ar_effect_new
ar_it <- ar_it + 1
SIC0 <- SIC1
}else if( all(SIC2 > c(SIC1, SIC0, SIC3, SIC4)) ){
ma_effect <- ma_effect_new
ma_it <- ma_it + 1
SIC0 <- SIC2
}else if( all(SIC3 > c(SIC1, SIC2, SIC0, SIC4)) ){
order <- order_ar
SIC0 <- SIC3
}
else if( all(SIC4 > c(SIC0, SIC1, SIC2, SIC3)) ){
order <- order_ma
ma_effect <- ma_effect_new
ma_it <- 2
SIC0 <- SIC4
}
}else{ #if length(ma_effect>0)
order_ma <- order + c(0,1)
est <- seasonal_arma(y, dates, order = order_ma, seasonal_ar = ar_effect, seasonal_ma = ma_effect)
SIC4 <- (ucv-est$MSE)/ucv - pen*(sum(order) + length(ar_effect) + length(ma_effect))/sqrt(length(y))  #Seth's bogus information criteria
if( all(SIC0 > c(SIC1, SIC2, SIC3, SIC4)) ){
break
}else if( all(SIC1 > c(SIC0, SIC2, SIC3, SIC4)) ){
ar_effect <- ar_effect_new
ar_it <- ar_it + 1
SIC0 <- SIC1
}else if( all(SIC2 > c(SIC1, SIC0, SIC3, SIC4)) ){
ma_effect <- ma_effect_new
ma_it <- ma_it + 1
SIC0 <- SIC2
}else if( all(SIC3 > c(SIC1, SIC2, SIC0, SIC4)) ){
order <- order_ar
SIC0 <- SIC3
}
else if( all(SIC4 > c(SIC0, SIC1, SIC2, SIC3)) ){
order <- order_ma
SIC0 <- SIC4
}
}#if length(ma_effect>0)
} #for(it in 1:4)
order
ar_effect
ma_effect
ar_effect <- NULL #need to add holidays and such
ma_effect <- NULL
ar_it <- 1
ma_it <- 1
order <- c(1,0)
order_new <- c(1,0)
years <- c("year", "two_year", "three_year")
est <- seasonal_arma(y, dates, order = order, seasonal_ar = ar_effect, seasonal_ma = ma_effect)
ucv <- var(y, na.rm = T)
pen <- .1
SIC0 <- (ucv-est$MSE)/ucv - pen*(sum(order) + length(ar_effect) + length(ma_effect))/sqrt(length(y)) #Seth's bogus information criteria
for(it in 1:4){
ar_effect_new <- c(ar_effect, years[ar_it])
est  <- seasonal_arma(y, dates, order = order, seasonal_ar = ar_effect_new, seasonal_ma = ma_effect)
SIC1 <- (ucv-est$MSE)/ucv - pen*(sum(order) + length(ar_effect) + length(ma_effect))/sqrt(length(y))  #Seth's bogus information criteria
ma_effect_new <- c(ma_effect, years[ma_it])
est  <- seasonal_arma(y, dates, order = order, seasonal_ar = ar_effect, seasonal_ma = ma_effect_new)
SIC2 <- (ucv-est$MSE)/ucv - pen*(sum(order) + length(ar_effect) + length(ma_effect_new))/sqrt(length(y))  #Seth's bogus information criteria
order_ar <- order + c(1,0)
est <- seasonal_arma(y, dates, order = order_ar, seasonal_ar = ar_effect, seasonal_ma = ma_effect)
SIC3 <- (ucv-est$MSE)/ucv - pen*(sum(order) + length(ar_effect) + length(ma_effect))/sqrt(length(y))  #Seth's bogus information criteria
if(length(ma_effect)==0){ #q>0 requires a seasonal MA component
order_ma <- order + c(0,1)
ma_effect_new <- c(ma_effect, years[1])
est <- seasonal_arma(y, dates, order = order_ma, seasonal_ar = ar_effect, seasonal_ma = ma_effect_new)
SIC4 <- (ucv-est$MSE)/ucv - pen*(sum(order) + length(ar_effect) + length(ma_effect))/sqrt(length(y))  #Seth's bogus information criteria
if( all(SIC0 > c(SIC1, SIC2, SIC3, SIC4)) ){
break
}else if( all(SIC1 > c(SIC0, SIC2, SIC3, SIC4)) ){
ar_effect <- ar_effect_new
ar_it <- ar_it + 1
SIC0 <- SIC1
}else if( all(SIC2 > c(SIC1, SIC0, SIC3, SIC4)) ){
ma_effect <- ma_effect_new
ma_it <- ma_it + 1
SIC0 <- SIC2
}else if( all(SIC3 > c(SIC1, SIC2, SIC0, SIC4)) ){
order <- order_ar
SIC0 <- SIC3
}
else if( all(SIC4 > c(SIC0, SIC1, SIC2, SIC3)) ){
order <- order_ma
ma_effect <- ma_effect_new
ma_it <- 2
SIC0 <- SIC4
}
}else{ #if length(ma_effect>0)
order_ma <- order + c(0,1)
est <- seasonal_arma(y, dates, order = order_ma, seasonal_ar = ar_effect, seasonal_ma = ma_effect)
SIC4 <- (ucv-est$MSE)/ucv - pen*(sum(order) + length(ar_effect) + length(ma_effect))/sqrt(length(y))  #Seth's bogus information criteria
if( all(SIC0 > c(SIC1, SIC2, SIC3, SIC4)) ){
break
}else if( all(SIC1 > c(SIC0, SIC2, SIC3, SIC4)) ){
ar_effect <- ar_effect_new
ar_it <- ar_it + 1
SIC0 <- SIC1
}else if( all(SIC2 > c(SIC1, SIC0, SIC3, SIC4)) ){
ma_effect <- ma_effect_new
ma_it <- ma_it + 1
SIC0 <- SIC2
}else if( all(SIC3 > c(SIC1, SIC2, SIC0, SIC4)) ){
order <- order_ar
SIC0 <- SIC3
}
else if( all(SIC4 > c(SIC0, SIC1, SIC2, SIC3)) ){
order <- order_ma
SIC0 <- SIC4
}
}#if length(ma_effect>0)
} #for(it in 1:4)
order
ar_effect
ma_effect
ma_effect
ma_effect_new
ar_effect_new <- c(ar_effect, years[ar_it])
est  <- seasonal_arma(y, dates, order = order, seasonal_ar = ar_effect_new, seasonal_ma = ma_effect)
order
est$MSE
ma_effect
order_ma <- order + c(0,1)
ma_effect_new <- c(ma_effect, years[1])
est <- seasonal_arma(y, dates, order = order_ma, seasonal_ar = ar_effect, seasonal_ma = ma_effect_new)
est$MSE
ma_effect
ar_effect
est <- seasonal_arma(y, dates, order = order, seasonal_ar = ar_effect, seasonal_ma = ma_effect)
est$MSE
ar_effect <- NULL #need to add holidays and such
ma_effect <- NULL
ar_it <- 1
ma_it <- 1
order <- c(1,0)
order_new <- c(1,0)
years <- c("year", "two_year", "three_year")
est <- seasonal_arma(y, dates, order = order, seasonal_ar = ar_effect, seasonal_ma = ma_effect)
ucv <- var(y, na.rm = T)
pen <- .2
SIC0 <- (ucv-est$MSE)/ucv - pen*(sum(order) + length(ar_effect) + length(ma_effect))/sqrt(length(y)) #Seth's bogus information criteria
for(it in 1:4){
ar_effect_new <- c(ar_effect, years[ar_it])
est  <- seasonal_arma(y, dates, order = order, seasonal_ar = ar_effect_new, seasonal_ma = ma_effect)
SIC1 <- (ucv-est$MSE)/ucv - pen*(sum(order) + length(ar_effect) + length(ma_effect))/sqrt(length(y))  #Seth's bogus information criteria
ma_effect_new <- c(ma_effect, years[ma_it])
est  <- seasonal_arma(y, dates, order = order, seasonal_ar = ar_effect, seasonal_ma = ma_effect_new)
SIC2 <- (ucv-est$MSE)/ucv - pen*(sum(order) + length(ar_effect) + length(ma_effect_new))/sqrt(length(y))  #Seth's bogus information criteria
order_ar <- order + c(1,0)
est <- seasonal_arma(y, dates, order = order_ar, seasonal_ar = ar_effect, seasonal_ma = ma_effect)
SIC3 <- (ucv-est$MSE)/ucv - pen*(sum(order) + length(ar_effect) + length(ma_effect))/sqrt(length(y))  #Seth's bogus information criteria
if(length(ma_effect)==0){ #q>0 requires a seasonal MA component
order_ma <- order + c(0,1)
ma_effect_new <- c(ma_effect, years[1])
est <- seasonal_arma(y, dates, order = order_ma, seasonal_ar = ar_effect, seasonal_ma = ma_effect_new)
SIC4 <- (ucv-est$MSE)/ucv - pen*(sum(order) + length(ar_effect) + length(ma_effect))/sqrt(length(y))  #Seth's bogus information criteria
if( all(SIC0 > c(SIC1, SIC2, SIC3, SIC4)) ){
break
}else if( all(SIC1 > c(SIC0, SIC2, SIC3, SIC4)) ){
ar_effect <- ar_effect_new
ar_it <- ar_it + 1
SIC0 <- SIC1
}else if( all(SIC2 > c(SIC1, SIC0, SIC3, SIC4)) ){
ma_effect <- ma_effect_new
ma_it <- ma_it + 1
SIC0 <- SIC2
}else if( all(SIC3 > c(SIC1, SIC2, SIC0, SIC4)) ){
order <- order_ar
SIC0 <- SIC3
}
else if( all(SIC4 > c(SIC0, SIC1, SIC2, SIC3)) ){
order <- order_ma
ma_effect <- ma_effect_new
ma_it <- 2
SIC0 <- SIC4
}
}else{ #if length(ma_effect>0)
order_ma <- order + c(0,1)
est <- seasonal_arma(y, dates, order = order_ma, seasonal_ar = ar_effect, seasonal_ma = ma_effect)
SIC4 <- (ucv-est$MSE)/ucv - pen*(sum(order) + length(ar_effect) + length(ma_effect))/sqrt(length(y))  #Seth's bogus information criteria
if( all(SIC0 > c(SIC1, SIC2, SIC3, SIC4)) ){
break
}else if( all(SIC1 > c(SIC0, SIC2, SIC3, SIC4)) ){
ar_effect <- ar_effect_new
ar_it <- ar_it + 1
SIC0 <- SIC1
}else if( all(SIC2 > c(SIC1, SIC0, SIC3, SIC4)) ){
ma_effect <- ma_effect_new
ma_it <- ma_it + 1
SIC0 <- SIC2
}else if( all(SIC3 > c(SIC1, SIC2, SIC0, SIC4)) ){
order <- order_ar
SIC0 <- SIC3
}
else if( all(SIC4 > c(SIC0, SIC1, SIC2, SIC3)) ){
order <- order_ma
SIC0 <- SIC4
}
}#if length(ma_effect>0)
} #for(it in 1:4)
SIC0
ar_effect <- NULL #need to add holidays and such
ma_effect <- NULL
ar_it <- 1
ma_it <- 1
order <- c(1,0)
order_new <- c(1,0)
years <- c("year", "two_year", "three_year")
est <- seasonal_arma(y, dates, order = order, seasonal_ar = ar_effect, seasonal_ma = ma_effect)
ucv <- var(y, na.rm = T)
pen <- .2
SIC0 <- (ucv-est$MSE)/ucv - pen*(sum(order) + length(ar_effect) + length(ma_effect))/sqrt(length(y)) #Seth's bogus information criteria
for(it in 1:4){
ar_effect_new <- c(ar_effect, years[ar_it])
est  <- seasonal_arma(y, dates, order = order, seasonal_ar = ar_effect_new, seasonal_ma = ma_effect)
SIC1 <- (ucv-est$MSE)/ucv - pen*(sum(order) + length(ar_effect) + length(ma_effect))/sqrt(length(y))  #Seth's bogus information criteria
ma_effect_new <- c(ma_effect, years[ma_it])
est  <- seasonal_arma(y, dates, order = order, seasonal_ar = ar_effect, seasonal_ma = ma_effect_new)
SIC2 <- (ucv-est$MSE)/ucv - pen*(sum(order) + length(ar_effect) + length(ma_effect_new))/sqrt(length(y))  #Seth's bogus information criteria
order_ar <- order + c(1,0)
est <- seasonal_arma(y, dates, order = order_ar, seasonal_ar = ar_effect, seasonal_ma = ma_effect)
SIC3 <- (ucv-est$MSE)/ucv - pen*(sum(order) + length(ar_effect) + length(ma_effect))/sqrt(length(y))  #Seth's bogus information criteria
if(length(ma_effect)==0){ #q>0 requires a seasonal MA component
order_ma <- order + c(0,1)
ma_effect_new <- c(ma_effect, years[1])
est <- seasonal_arma(y, dates, order = order_ma, seasonal_ar = ar_effect, seasonal_ma = ma_effect_new)
SIC4 <- (ucv-est$MSE)/ucv - pen*(sum(order) + length(ar_effect) + length(ma_effect))/sqrt(length(y))  #Seth's bogus information criteria
if( all(SIC0 > c(SIC1, SIC2, SIC3, SIC4)) ){
break
}else if( all(SIC1 > c(SIC0, SIC2, SIC3, SIC4)) ){
ar_effect <- ar_effect_new
ar_it <- ar_it + 1
SIC0 <- SIC1
}else if( all(SIC2 > c(SIC1, SIC0, SIC3, SIC4)) ){
ma_effect <- ma_effect_new
ma_it <- ma_it + 1
SIC0 <- SIC2
}else if( all(SIC3 > c(SIC1, SIC2, SIC0, SIC4)) ){
order <- order_ar
SIC0 <- SIC3
}
else if( all(SIC4 > c(SIC0, SIC1, SIC2, SIC3)) ){
order <- order_ma
ma_effect <- ma_effect_new
ma_it <- 2
SIC0 <- SIC4
}
}else{ #if length(ma_effect>0)
order_ma <- order + c(0,1)
est <- seasonal_arma(y, dates, order = order_ma, seasonal_ar = ar_effect, seasonal_ma = ma_effect)
SIC4 <- (ucv-est$MSE)/ucv - pen*(sum(order) + length(ar_effect) + length(ma_effect))/sqrt(length(y))  #Seth's bogus information criteria
if( all(SIC0 > c(SIC1, SIC2, SIC3, SIC4)) ){
break
}else if( all(SIC1 > c(SIC0, SIC2, SIC3, SIC4)) ){
ar_effect <- ar_effect_new
ar_it <- ar_it + 1
SIC0 <- SIC1
}else if( all(SIC2 > c(SIC1, SIC0, SIC3, SIC4)) ){
ma_effect <- ma_effect_new
ma_it <- ma_it + 1
SIC0 <- SIC2
}else if( all(SIC3 > c(SIC1, SIC2, SIC0, SIC4)) ){
order <- order_ar
SIC0 <- SIC3
}
else if( all(SIC4 > c(SIC0, SIC1, SIC2, SIC3)) ){
order <- order_ma
SIC0 <- SIC4
}
}#if length(ma_effect>0)
} #for(it in 1:4)
SIC0
SIC4
SIC3
SIC2
SIC1
order
ar_effect
est  <- seasonal_arma(y, dates, order = order, seasonal_ar = c(ar_effect,"cny"), seasonal_ma = ma_effect)
est  <- seasonal_arma(y, dates, order = order, seasonal_ar = c(ar_effect), seasonal_ma = ma_effect)
est$MSE
#cny
est  <- seasonal_arma(y, dates, order = order, seasonal_ar = c(ar_effect, "cny"), seasonal_ma = ma_effect)
est$MSE
est$MSE
seasonal_arma(y, dates, order = order, seasonal_ar = ar_effect, seasonal_ma = c(ma_effect, "cny"))
est  <- seasonal_arma(y, dates, order = order, seasonal_ar = ar_effect, seasonal_ma = c(ma_effect, "cny"))
est$MSE
est  <- seasonal_arma(y, dates, order = order, seasonal_ar = car_effect, seasonal_ma = ma_effect)
est  <- seasonal_arma(y, dates, order = order, seasonal_ar = ar_effect, seasonal_ma = ma_effect)
est$MSE
P_lag <- make_lag_index(dates, "year")
P_lag
est$P
P_lag <- make_lag_index(dates, "year")
Q_lag <- make_lag_index(dates, "cny")
View(Q_lag)
bob <- SARMA(y, p = est$p, q = est$q, P = est$P, Q = matrix(0,1,1), P_lag = P_lag, Q_lag = Q_lag)
bob$MSE
sue <- SARMA(y, p = est$p, q = est$q, P = est$P, Q = matrix(0,0,0), P_lag = P_lag, Q_lag = Q_lag)
sue$MSE
bob <- SARMA(y, p = est$p, q = est$q, P = est$P, Q = matrix(0,1,1), P_lag = P_lag, Q_lag = Q_lag)
bob$MSE
est$q
Rcpp::sourceCpp('V2/SA.cpp')
Rcpp::sourceCpp('V2/SA.cpp')
Rcpp::sourceCpp('V2/SA.cpp')
lags <- NULL
#this is for an irregular patern of dates
year_ago <- do.call("c", lapply(dates, years_ago, shift = 1))
tmp  <- which_date_closest_ordered(FromVec = year_ago, IndVec = dates)
tmp[seq(1,max(which(tmp==1))-1)] <- 0
lags <- cbind(lags, tmp) #R indexing
View(lags)
a <- 2
b <- 4
c <- 2
c < 3
3 > c(a,b,c)
library(seasonality)
#this can also be entered as a ts_boxable object
dates <- as.Date(initial_claims$DATE)
data  <- initial_claims$ICNSA
start_time <- Sys.time()
SA <- auto_SA(data = data, dates = dates)
end_time <- Sys.time()
end_time - start_time
#ts.plot(cbind(data_weekly, SA$data_sa), col = c("red", "blue")) #could use some fine tuining but pretty good!
plot(dates, data, type = "l", lwd = 3, col = "lightskyblue1",
xlab = "Dates", ylab = "Initial Claims")
lines(dates, SA$data_sa, col = "black")
#ts.plot(cbind(data_weekly, SA$data_sa), col = c("red", "blue")) #could use some fine tuining but pretty good!
plot(dates, SA$data_sa, type = "l", lwd = 3, col = "lightskyblue1",
xlab = "Dates", ylab = "Initial Claims")
lines(dates, initial_claims_SA$ICSA, col = "black")
SA$parameters
data <- IP$IPNSA
dates <- IP$DATE
SA <- auto_SA(data = data, dates = dates)
SA$ma_effect
SA$parameters
SA$ar_effect
y <- ts(data, start = c(1970,1), frequency = 12)
library(seasonal)
sa <- seas(y)
plot(dates[-1], diff(log(SA$data_sa)), type = "l", lwd = 3, col = "lightskyblue1",
xlab = "Dates", ylab = "IP")
lines(dates[-1], diff(log(final(sa))), lwd = 1, col = "red")
data <- IP$IPNSA
dates <- IP$DATE
trend <- loess(data ~ seq(length(data)), span = .1, na.action = na.exclude) #refine parameter selection
trend <- predict(trend)
#ts.plot(cbind(trend, data), col = c("red", "blue"))
y <- data - trend
SA <- auto_SA(y, dates, detrend = FALSE)
y <- ts(data, start = c(1970,1), frequency = 12)
aa <- auto.arima(y)
library(forecast)
data <- IP$IPNSA
dates <- IP$DATE
trend <- loess(data ~ seq(length(data)), span = .1, na.action = na.exclude) #refine parameter selection
trend <- predict(trend)
#ts.plot(cbind(trend, data), col = c("red", "blue"))
y <- data - trend
SA <- auto_SA(y, dates, detrend = FALSE)
y <- ts(data, start = c(1970,1), frequency = 12)
aa <- auto.arima(y)
data <- IP$IPNSA
dates <- IP$DATE
trend <- loess(data ~ seq(length(data)), span = .1, na.action = na.exclude) #refine parameter selection
trend <- predict(trend)
#ts.plot(cbind(trend, data), col = c("red", "blue"))
y <- data - trend
SA <- auto_SA(y, dates, detrend = FALSE)
y
dates
data <- IP$IPNSA
dates <- IP$DATE
SA <- auto_SA(data = data, dates = dates)
bob <- easter
bob
library(seasonal)
data <- IP$IPNSA
dates <- IP$DATE
trend <- loess(data ~ seq(length(data)), span = .1, na.action = na.exclude) #refine parameter selection
trend <- predict(trend)
#ts.plot(cbind(trend, data), col = c("red", "blue"))
y <- data - trend
SA <- auto_SA(y, dates, detrend = FALSE)
library(seasonality)
data <- IP$IPNSA
dates <- IP$DATE
SA <- auto_SA(y, dates, detrend = FALSE)
data <- IP$IPNSA
dates <- IP$DATE
trend <- loess(data ~ seq(length(data)), span = .1, na.action = na.exclude) #refine parameter selection
trend <- predict(trend)
#ts.plot(cbind(trend, data), col = c("red", "blue"))
y <- data - trend
SA <- auto_SA(y, dates, detrend = FALSE)
SA$MSE
SA$parameters
summary(aa)
