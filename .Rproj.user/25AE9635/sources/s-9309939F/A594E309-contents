dummy_matrix <- function(x) {
  # factors with same level order as x
  xf <- factor(x, levels = unique(x))
  z <- model.matrix(~ xf + 0)
  attr(z, "assign") <- NULL
  attr(z, "contrasts") <- NULL
  colnames(z) <- levels(xf)
  # z[,-1]
  z
}

genhol_dates <- function(x, dates, start = 0, end = 0) {
  stopifnot(inherits(x, "Date"))
  stopifnot(inherits(dates, "Date"))
  freq <- which_freq(dates)
  timestamp <- timestamp_fun(freq)
  sq <- daily_seq(dates)


  idx.holiday <- which(sq %in% x)
  st <- idx.holiday + start
  en <- idx.holiday + end
  idx.holiday.extended <- unlist(Map(function(st, en) st:en, st, en))

  is.holiday <- logical(length(sq))
  is.holiday[idx.holiday.extended] <- TRUE

  z <- as.matrix(tapply(is.holiday, timestamp(sq), sum))
  colnames(z) <- "holiday"
  z
}

weekdays_in_month <- function(date){
  sq <- seq.Date(from = first_of_month(date), to = end_of_month(date), by = "day")
  count <- sum(as.integer(!(weekdays(sq) %in% c("Saturday", "Sunday"))))
  if(month(date)==12){
    count = count - sum(as.integer(!(weekdays(sq[24:25]) %in% c("Saturday", "Sunday")))) #subtract Christmas eve and Christmas if counted
  }
  if(month(date)==1){
    count = count - as.integer(!(weekdays(sq[1]) %in% c("Saturday", "Sunday"))) #subtract New Years if counted
  }
  return(count)
}

# auto detect frequency
get_freq_dt <- function(y, dates) {
  out <- median(diff(dates[which(!is.na(y))]))
}

log_diff <- function(y, fast = FALSE){
  if(!fast){
    fq <- get_freq(y)
    rmdr  <- median(which(is.finite(y))%%fq)
    indx  <- seq(1, length(y))%%fq == rmdr
    y <- y[indx]
  }
  # 1st test: test AR(1) coefficient
  # rm outlier here reffers to how many iterations of removing outliers should we do. The threshold is set at 5 sd.
  ts_reg <- UVreg(x = y[-length(y)] - mean(y, na.rm = TRUE), y = y[-1] - mean(y, na.rm = TRUE), rm_outlier = 2)

  # 2nd test: does the data grow over time? Normally the first test would get this, but often with super noisy
  # daily data it misses. This is a sort of fall-back.
  lin_reg <- UVreg(x = seq(length(y)), y = y - mean(y, na.rm = TRUE), rm_outlier = 2)

  take_diff <- !(ts_reg$B + 3*ts_reg$sd)<1 || (abs(lin_reg$B) - 2*lin_reg$sd)>0
  take_log  <- take_diff && !any(y<0, na.rm = TRUE)  #(ts_reg$B - ts_reg$sd)>1 && !any(y<0, na.rm = TRUE)

  log_diff <- c(take_log, take_diff)
  names(log_diff) <- c("Take Logs", "Take Diffs")

  return(log_diff)
}